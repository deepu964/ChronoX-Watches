<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, maximum-scale=1.0">
    <title>ChronoX - Products Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <style>
        /* ===== CSS RESET & MOBILE-FIRST BASE ===== */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            -webkit-tap-highlight-color: transparent;
        }

        *:before,
        *:after {
            box-sizing: border-box;
        }

        :root {
            /* Mobile-First Color Palette */
            --primary-color: #3b82f6;
            --primary-dark: #2563eb;
            --primary-light: #dbeafe;
            --secondary-color: #6b7280;
            --success-color: #10b981;
            --danger-color: #ef4444;
            --warning-color: #f59e0b;
            --info-color: #06b6d4;

            /* Neutral Colors */
            --white: #ffffff;
            --gray-50: #f9fafb;
            --gray-100: #f3f4f6;
            --gray-200: #e5e7eb;
            --gray-300: #d1d5db;
            --gray-400: #9ca3af;
            --gray-500: #6b7280;
            --gray-600: #4b5563;
            --gray-700: #374151;
            --gray-800: #1f2937;
            --gray-900: #111827;

            /* Mobile-First Layout Variables */
            --sidebar-width-mobile: 280px;
            --sidebar-width-tablet: 240px;
            --sidebar-width-desktop: 280px;
            --sidebar-collapsed: 0px;
            --header-height-mobile: 56px;
            --header-height-tablet: 64px;
            --header-height-desktop: 80px;

            /* Mobile-First Spacing */
            --spacing-xs: 0.25rem;    /* 4px */
            --spacing-sm: 0.5rem;     /* 8px */
            --spacing-md: 0.75rem;    /* 12px */
            --spacing-lg: 1rem;       /* 16px */
            --spacing-xl: 1.25rem;    /* 20px */
            --spacing-2xl: 1.5rem;    /* 24px */
            --spacing-3xl: 2rem;      /* 32px */

            /* Mobile-Optimized Border Radius */
            --radius-xs: 0.125rem;    /* 2px */
            --radius-sm: 0.25rem;     /* 4px */
            --radius-md: 0.375rem;    /* 6px */
            --radius-lg: 0.5rem;      /* 8px */
            --radius-xl: 0.75rem;     /* 12px */
            --radius-2xl: 1rem;       /* 16px */

            /* Mobile-Optimized Shadows */
            --shadow-xs: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow-sm: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);

            /* Mobile-First Transitions */
            --transition-fast: 0.15s cubic-bezier(0.4, 0, 0.2, 1);
            --transition-normal: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --transition-slow: 0.5s cubic-bezier(0.4, 0, 0.2, 1);

            /* Mobile-Optimized Z-Index Scale */
            --z-base: 0;
            --z-dropdown: 1000;
            --z-sticky: 1020;
            --z-fixed: 1030;
            --z-modal-backdrop: 1040;
            --z-modal: 1050;
            --z-popover: 1060;
            --z-tooltip: 1070;
            --z-toast: 1080;

            /* Mobile Touch Targets */
            --touch-target-min: 44px;
            --touch-target-comfortable: 48px;
        }

        /* ===== MOBILE-FIRST TYPOGRAPHY ===== */
        html {
            font-size: 14px; /* Mobile base font size */
            -webkit-text-size-adjust: 100%;
            -ms-text-size-adjust: 100%;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            font-size: 1rem;
            line-height: 1.5;
            color: var(--gray-700);
            background-color: var(--gray-50);
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            overflow-x: hidden;
            position: relative;
        }

        /* Prevent horizontal scroll on mobile */
        body.menu-open {
            overflow: hidden;
            position: fixed;
            width: 100%;
        }

        /* ===== MOBILE-FIRST LAYOUT STRUCTURE ===== */
        .admin-layout {
            display: flex;
            min-height: 100vh;
            min-height: 100dvh; /* Dynamic viewport height for mobile */
            position: relative;
            overflow-x: hidden;
        }

        /* ===== MOBILE MENU TOGGLE (ALWAYS VISIBLE ON MOBILE) ===== */
        .mobile-menu-toggle {
            position: fixed;
            top: var(--spacing-md);
            left: var(--spacing-md);
            z-index: var(--z-fixed);
            display: flex;
            align-items: center;
            justify-content: center;
            width: var(--touch-target-comfortable);
            height: var(--touch-target-comfortable);
            background: var(--white);
            border: 1px solid var(--gray-200);
            border-radius: var(--radius-lg);
            cursor: pointer;
            transition: var(--transition-fast);
            box-shadow: var(--shadow-md);
            -webkit-user-select: none;
            user-select: none;
        }

        .mobile-menu-toggle:active {
            transform: scale(0.95);
            box-shadow: var(--shadow-sm);
        }

        .mobile-menu-toggle:hover {
            background: var(--gray-50);
            box-shadow: var(--shadow-lg);
        }

        .mobile-menu-toggle i {
            font-size: 18px;
            color: var(--gray-600);
            transition: var(--transition-fast);
        }

        .mobile-menu-toggle.active i {
            transform: rotate(90deg);
        }

        /* ===== MOBILE-FIRST SIDEBAR STYLES ===== */
        .sidebar {
            width: var(--sidebar-width-mobile);
            background: var(--white);
            border-right: 1px solid var(--gray-200);
            height: 100vh;
            height: 100dvh;
            position: fixed;
            left: 0;
            top: 0;
            z-index: var(--z-fixed);
            display: flex;
            flex-direction: column;
            transform: translateX(-100%);
            transition: transform var(--transition-normal);
            overflow-y: auto;
            overflow-x: hidden;
            -webkit-overflow-scrolling: touch;
        }

        .sidebar.active {
            transform: translateX(0);
        }

        /* Sidebar Backdrop for Mobile */
        .sidebar-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            height: 100dvh;
            background: rgba(0, 0, 0, 0.5);
            z-index: calc(var(--z-fixed) - 1);
            opacity: 0;
            visibility: hidden;
            transition: opacity var(--transition-normal), visibility var(--transition-normal);
            backdrop-filter: blur(2px);
            -webkit-backdrop-filter: blur(2px);
        }

        .sidebar-backdrop.active {
            opacity: 1;
            visibility: visible;
        }

        .sidebar-header {
            padding: var(--spacing-xl) var(--spacing-lg);
            border-bottom: 1px solid var(--gray-200);
            text-align: center;
            flex-shrink: 0;
        }

        .logo {
            font-size: 24px;
            font-weight: 700;
            color: var(--gray-800);
        }

        .logo-accent {
            color: var(--primary-color);
        }

        .nav-items {
            flex: 1;
            padding: var(--spacing-lg) 0;
            overflow-y: auto;
            -webkit-overflow-scrolling: touch;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: var(--spacing-lg) var(--spacing-xl);
            color: var(--gray-600);
            text-decoration: none;
            transition: var(--transition-fast);
            border-left: 3px solid transparent;
            margin-bottom: var(--spacing-xs);
            min-height: var(--touch-target-min);
            position: relative;
        }

        .nav-item:active {
            background: var(--gray-100);
        }

        .nav-item:hover {
            background: var(--gray-50);
            color: var(--gray-800);
            border-left-color: var(--gray-300);
        }

        .nav-item.active {
            background: var(--primary-light);
            color: var(--primary-color);
            border-left-color: var(--primary-color);
            font-weight: 500;
        }

        .nav-icon {
            width: 20px;
            margin-right: var(--spacing-lg);
            text-align: center;
            font-size: 18px;
            flex-shrink: 0;
        }

        .nav-text {
            font-size: 15px;
            font-weight: 500;
            white-space: nowrap;
        }

        .sidebar-footer {
            padding: var(--spacing-lg);
            border-top: 1px solid var(--gray-200);
            display: flex;
            flex-direction: column;
            gap: var(--spacing-sm);
            flex-shrink: 0;
        }

        /* ===== MOBILE-FIRST MAIN CONTENT WRAPPER ===== */
        .main-content-wrapper {
            flex: 1;
            width: 100%;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            min-height: 100dvh;
            transition: var(--transition-normal);
            margin-left: 0;
        }

        /* ===== MOBILE-FIRST PAGE HEADER ===== */
        .page-header {
            background: var(--white);
            border-bottom: 1px solid var(--gray-200);
            padding: var(--spacing-md) var(--spacing-lg);
            padding-left: calc(var(--touch-target-comfortable) + var(--spacing-xl));
            display: flex;
            flex-direction: column;
            gap: var(--spacing-md);
            min-height: var(--header-height-mobile);
            position: sticky;
            top: 0;
            z-index: var(--z-sticky);
            align-items: flex-start;
        }

        .header-content {
            flex: 1;
            width: 100%;
        }

        .breadcrumb-nav {
            margin-bottom: var(--spacing-sm);
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
        }

        .breadcrumb {
            display: flex;
            align-items: center;
            list-style: none;
            font-size: 12px;
            white-space: nowrap;
            min-width: max-content;
        }

        .breadcrumb-item {
            display: flex;
            align-items: center;
        }

        .breadcrumb-link {
            color: var(--gray-500);
            text-decoration: none;
            transition: var(--transition-fast);
            padding: var(--spacing-xs) var(--spacing-sm);
            border-radius: var(--radius-sm);
            min-height: var(--touch-target-min);
            display: flex;
            align-items: center;
        }

        .breadcrumb-link:active {
            background: var(--gray-100);
        }

        .breadcrumb-link:hover {
            color: var(--primary-color);
            background: var(--primary-light);
        }

        .breadcrumb-current {
            color: var(--gray-700);
            font-weight: 500;
            padding: var(--spacing-xs) var(--spacing-sm);
        }

        .breadcrumb-separator {
            margin: 0 var(--spacing-xs);
            font-size: 10px;
            color: var(--gray-400);
        }

        .page-title {
            font-size: 20px;
            font-weight: 700;
            color: var(--gray-900);
            margin: 0;
            line-height: 1.2;
        }

        .user-profile {
            display: flex;
            align-items: center;
            background: var(--white);
            padding: var(--spacing-sm) var(--spacing-md);
            border-radius: var(--radius-xl);
            box-shadow: var(--shadow-sm);
            border: 1px solid var(--gray-200);
            cursor: pointer;
            transition: var(--transition-fast);
            align-self: flex-end;
            min-height: var(--touch-target-min);
        }

        .user-profile:active {
            transform: scale(0.98);
            box-shadow: var(--shadow-xs);
        }

        .user-profile:hover {
            box-shadow: var(--shadow-md);
        }

        .user-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            overflow: hidden;
            margin-right: var(--spacing-md);
            flex-shrink: 0;
        }

        .avatar-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .user-info {
            display: none; /* Hidden on mobile by default */
            flex-direction: column;
        }

        .user-name {
            font-weight: 600;
            color: var(--gray-900);
            font-size: 13px;
            line-height: 1.2;
        }

        .user-role {
            font-size: 11px;
            color: var(--gray-500);
            line-height: 1.2;
        }

        /* ===== MOBILE-FIRST MAIN CONTENT ===== */
        .main-content {
            flex: 1;
            padding: var(--spacing-lg);
            overflow-x: hidden;
        }

        /* ===== MOBILE-FIRST CONTENT ACTIONS ===== */
        .content-actions {
            margin-bottom: var(--spacing-xl);
        }

        .search-filter-row {
            display: flex;
            flex-direction: column;
            gap: var(--spacing-md);
            align-items: stretch;
        }

        .search-form {
            width: 100%;
            order: 1;
        }

        .filter-form {
            width: 100%;
            order: 2;
        }

        .add-product-form {
            width: 100%;
            order: 3;
        }

        .search-input-group {
            position: relative;
            display: flex;
            align-items: center;
        }

        .search-icon {
            position: absolute;
            left: var(--spacing-lg);
            color: var(--gray-400);
            font-size: 16px;
            z-index: 1;
            pointer-events: none;
        }

        .search-input {
            width: 100%;
            padding: var(--spacing-lg) var(--spacing-lg) var(--spacing-lg) 2.75rem;
            border: 1px solid var(--gray-300);
            border-radius: var(--radius-lg);
            font-size: 16px; /* Prevents zoom on iOS */
            transition: var(--transition-fast);
            background: var(--white);
            min-height: var(--touch-target-comfortable);
            -webkit-appearance: none;
            appearance: none;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .search-clear {
            position: absolute;
            right: var(--spacing-lg);
            color: var(--gray-400);
            text-decoration: none;
            padding: var(--spacing-sm);
            border-radius: var(--radius-md);
            transition: var(--transition-fast);
            min-width: var(--touch-target-min);
            min-height: var(--touch-target-min);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .search-clear:active {
            background: var(--gray-100);
            color: var(--gray-600);
        }

        .search-clear:hover {
            color: var(--gray-600);
            background: var(--gray-100);
        }

        .category-select {
            width: 100%;
            padding: var(--spacing-lg);
            border: 1px solid var(--gray-300);
            border-radius: var(--radius-lg);
            font-size: 16px; /* Prevents zoom on iOS */
            background: var(--white);
            cursor: pointer;
            transition: var(--transition-fast);
            min-height: var(--touch-target-comfortable);
            -webkit-appearance: none;
            appearance: none;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right var(--spacing-lg) center;
            background-repeat: no-repeat;
            background-size: 16px 12px;
            padding-right: 3rem;
        }

        .category-select:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        /* ===== MOBILE-FIRST BUTTON STYLES ===== */
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: var(--spacing-lg) var(--spacing-xl);
            border: 1px solid transparent;
            border-radius: var(--radius-lg);
            font-size: 14px;
            font-weight: 500;
            text-decoration: none;
            cursor: pointer;
            transition: var(--transition-fast);
            min-height: var(--touch-target-comfortable);
            gap: var(--spacing-sm);
            white-space: nowrap;
            -webkit-user-select: none;
            user-select: none;
            position: relative;
            overflow: hidden;
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            pointer-events: none;
        }

        .btn:active {
            transform: scale(0.98);
        }

        .btn-primary {
            background: var(--primary-color);
            color: var(--white);
            border-color: var(--primary-color);
        }

        .btn-primary:hover:not(:disabled) {
            background: var(--primary-dark);
            border-color: var(--primary-dark);
            box-shadow: var(--shadow-md);
        }

        .btn-primary:active {
            background: var(--primary-dark);
            box-shadow: var(--shadow-sm);
        }

        .btn-outline {
            background: var(--white);
            color: var(--gray-700);
            border-color: var(--gray-300);
        }

        .btn-outline:hover:not(:disabled) {
            background: var(--gray-50);
            border-color: var(--gray-400);
        }

        .btn-outline:active {
            background: var(--gray-100);
        }

        .btn-dark {
            background: var(--gray-900);
            color: var(--white);
            border-color: var(--gray-900);
        }

        .btn-dark:hover:not(:disabled) {
            background: var(--gray-800);
            border-color: var(--gray-800);
        }

        .btn-dark:active {
            background: var(--gray-800);
        }

        .btn-danger {
            background: var(--danger-color);
            color: var(--white);
            border-color: var(--danger-color);
        }

        .btn-danger:hover:not(:disabled) {
            background: #dc2626;
            border-color: #dc2626;
        }

        .btn-danger:active {
            background: #dc2626;
        }

        .btn-icon {
            width: var(--touch-target-comfortable);
            height: var(--touch-target-comfortable);
            padding: 0;
            border-radius: var(--radius-lg);
            flex-shrink: 0;
        }

        .btn-edit:hover {
            color: var(--primary-color);
            border-color: var(--primary-color);
            background: var(--primary-light);
        }

        .btn-delete:hover {
            color: var(--danger-color);
            border-color: var(--danger-color);
            background: #fef2f2;
        }

        .btn-text {
            display: inline;
        }

        /* ===== MOBILE-FIRST PRODUCTS SECTION ===== */
        .products-section {
            background: var(--white);
            border-radius: var(--radius-xl);
            box-shadow: var(--shadow-sm);
            border: 1px solid var(--gray-200);
            overflow: hidden;
        }

        .table-container {
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
            position: relative;
        }

        /* Mobile scroll indicators */
        .table-container::before,
        .table-container::after {
            content: '';
            position: absolute;
            top: 0;
            bottom: 0;
            width: 20px;
            z-index: 1;
            pointer-events: none;
            transition: opacity var(--transition-fast);
        }

        .table-container::before {
            left: 0;
            background: linear-gradient(to right, rgba(255, 255, 255, 0.8), transparent);
            opacity: 0;
        }

        .table-container::after {
            right: 0;
            background: linear-gradient(to left, rgba(255, 255, 255, 0.8), transparent);
            opacity: 1;
        }

        .table-container.scrollable:not(.scroll-start)::before {
            opacity: 1;
        }

        .table-container.scrollable.scroll-end::after {
            opacity: 0;
        }

        .table-wrapper {
            min-width: 600px; /* Minimum width for mobile horizontal scroll */
        }

        .products-table {
            width: 100%;
            border-collapse: collapse;
            font-size: 13px;
        }

        .products-table th,
        .products-table td {
            padding: var(--spacing-md) var(--spacing-sm);
            text-align: left;
            border-bottom: 1px solid var(--gray-200);
            vertical-align: middle;
        }

        .products-table th {
            background: var(--gray-900);
            color: var(--white);
            font-weight: 600;
            font-size: 12px;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            position: sticky;
            top: 0;
            z-index: 1;
        }

        .products-table tbody tr {
            transition: var(--transition-fast);
        }

        .products-table tbody tr:hover {
            background: var(--gray-50);
        }

        .products-table tbody tr:last-child td {
            border-bottom: none;
        }

        /* Mobile-optimized table column widths */
        .col-image { 
            width: 60px; 
            padding: var(--spacing-sm);
        }
        .col-name { 
            width: auto; 
            min-width: 140px;
            max-width: 180px;
        }
        .col-brand { 
            width: 100px;
            display: none; /* Hidden on mobile */
        }
        .col-price { 
            width: 80px;
            text-align: right;
        }
        .col-stock { 
            width: 60px;
            text-align: center;
            display: none; /* Hidden on mobile */
        }
        .col-status { 
            width: 70px;
            text-align: center;
        }
        .col-actions { 
            width: 80px;
            text-align: center;
        }

        .product-image-wrapper {
            width: 48px;
            height: 48px;
            border-radius: var(--radius-md);
            overflow: hidden;
            background: var(--gray-100);
            flex-shrink: 0;
        }

        .product-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: var(--transition-normal);
        }

        .product-row:hover .product-image {
            transform: scale(1.05);
        }

        .product-name {
            font-weight: 500;
            color: var(--gray-900);
            line-height: 1.3;
            font-size: 13px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            max-width: 160px;
        }

        .price-value {
            font-weight: 600;
            color: var(--gray-900);
            font-size: 14px;
        }

        .mobile-brand,
        .mobile-stock {
            font-size: 11px;
            color: var(--gray-500);
            margin-top: var(--spacing-xs);
            line-height: 1.2;
        }

        /* Show mobile info on small screens */
        .mobile-brand,
        .mobile-stock {
            display: block;
        }

        /* ===== MOBILE-OPTIMIZED STATUS SWITCH ===== */
        .status-switch {
            position: relative;
            display: inline-block;
            width: 44px;
            height: 24px;
            flex-shrink: 0;
        }

        .status-checkbox {
            opacity: 0;
            width: 0;
            height: 0;
            position: absolute;
        }

        .status-slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: var(--gray-300);
            transition: var(--transition-normal);
            border-radius: 24px;
        }

        .status-slider:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background: var(--white);
            transition: var(--transition-normal);
            border-radius: 50%;
            box-shadow: var(--shadow-sm);
        }

        .status-checkbox:checked + .status-slider {
            background: var(--success-color);
        }

        .status-checkbox:checked + .status-slider:before {
            transform: translateX(20px);
        }

        .status-switch:active .status-slider:before {
            transform: scale(1.1);
        }

        /* ===== MOBILE-OPTIMIZED ACTION BUTTONS ===== */
        .action-buttons {
            display: flex;
            gap: var(--spacing-xs);
            justify-content: center;
        }

        .action-buttons .btn-icon {
            width: 36px;
            height: 36px;
            font-size: 12px;
        }

        /* ===== MOBILE-FIRST PAGINATION ===== */
        .pagination-container {
            display: flex;
            flex-direction: column;
            gap: var(--spacing-md);
            padding: var(--spacing-lg);
            border-top: 1px solid var(--gray-200);
            background: var(--white);
            text-align: center;
        }

        .pagination-info {
            color: var(--gray-600);
            font-size: 12px;
            order: 2;
        }

        .pagination-nav {
            display: flex;
            align-items: center;
            justify-content: center;
            order: 1;
        }

        .pagination-controls {
            display: flex;
            align-items: center;
            gap: var(--spacing-xs);
            flex-wrap: wrap;
            justify-content: center;
        }

        .pagination-numbers {
            display: flex;
            align-items: center;
            gap: var(--spacing-xs);
            margin: 0 var(--spacing-sm);
            flex-wrap: wrap;
            justify-content: center;
        }

        .pagination-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: 36px;
            height: 36px;
            padding: var(--spacing-sm);
            border: 1px solid var(--gray-300);
            background: var(--white);
            color: var(--gray-700);
            text-decoration: none;
            border-radius: var(--radius-md);
            font-size: 12px;
            font-weight: 500;
            transition: var(--transition-fast);
            cursor: pointer;
            -webkit-user-select: none;
            user-select: none;
        }

        .pagination-btn:active {
            transform: scale(0.95);
        }

        .pagination-btn:hover:not(:disabled):not(.active) {
            background: var(--gray-50);
            border-color: var(--gray-400);
        }

        .pagination-btn.active {
            background: var(--primary-color);
            color: var(--white);
            border-color: var(--primary-color);
        }

        .pagination-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            pointer-events: none;
        }

        .pagination-ellipsis {
            padding: var(--spacing-sm);
            color: var(--gray-400);
            font-size: 12px;
        }

        /* ===== MOBILE-FIRST MODAL STYLES ===== */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            height: 100dvh;
            z-index: var(--z-modal);
            align-items: center;
            justify-content: center;
            padding: var(--spacing-lg);
        }

        .modal.show {
            display: flex;
        }

        .modal-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(4px);
            -webkit-backdrop-filter: blur(4px);
        }

        .modal-content {
            position: relative;
            background: var(--white);
            border-radius: var(--radius-2xl);
            box-shadow: var(--shadow-xl);
            width: 100%;
            max-width: 400px;
            max-height: 90vh;
            max-height: 90dvh;
            overflow-y: auto;
            -webkit-overflow-scrolling: touch;
            animation: modalSlideIn 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
        }

        @keyframes modalSlideIn {
            from {
                opacity: 0;
                transform: translateY(20px) scale(0.95);
            }
            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        .modal-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: var(--spacing-xl);
            border-bottom: 1px solid var(--gray-200);
        }

        .modal-title {
            display: flex;
            align-items: center;
            gap: var(--spacing-md);
            font-size: 18px;
            font-weight: 600;
            color: var(--gray-900);
            margin: 0;
            line-height: 1.2;
        }

        .modal-title i {
            color: var(--warning-color);
            font-size: 20px;
        }

        .modal-close {
            width: var(--touch-target-min);
            height: var(--touch-target-min);
            display: flex;
            align-items: center;
            justify-content: center;
            background: none;
            border: none;
            border-radius: var(--radius-md);
            color: var(--gray-400);
            cursor: pointer;
            transition: var(--transition-fast);
            flex-shrink: 0;
        }

        .modal-close:active {
            background: var(--gray-100);
            color: var(--gray-600);
            transform: scale(0.95);
        }

        .modal-close:hover {
            background: var(--gray-100);
            color: var(--gray-600);
        }

        .modal-body {
            padding: var(--spacing-xl);
        }

        .modal-body p {
            color: var(--gray-600);
            line-height: 1.5;
            margin: 0;
            font-size: 14px;
        }

        .modal-footer {
            display: flex;
            flex-direction: column;
            gap: var(--spacing-md);
            padding: var(--spacing-xl);
            border-top: 1px solid var(--gray-200);
        }

        .modal-footer .btn {
            width: 100%;
            justify-content: center;
        }

        /* ===== MOBILE-FIRST TOAST NOTIFICATION ===== */
        .toast {
            position: fixed;
            top: var(--spacing-lg);
            left: var(--spacing-lg);
            right: var(--spacing-lg);
            z-index: var(--z-toast);
            background: var(--white);
            border: 1px solid var(--gray-200);
            border-radius: var(--radius-xl);
            box-shadow: var(--shadow-lg);
            padding: var(--spacing-lg);
            display: none;
            align-items: center;
            gap: var(--spacing-md);
            animation: toastSlideIn 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
        }

        @keyframes toastSlideIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .toast.show {
            display: flex;
        }

        .toast.success { border-left: 4px solid var(--success-color); }
        .toast.error { border-left: 4px solid var(--danger-color); }
        .toast.warning { border-left: 4px solid var(--warning-color); }
        .toast.info { border-left: 4px solid var(--info-color); }

        .toast-content {
            display: flex;
            align-items: center;
            gap: var(--spacing-md);
            flex: 1;
        }

        .toast-icon {
            font-size: 16px;
            flex-shrink: 0;
        }

        .toast.success .toast-icon:before {
            content: "\f00c";
            font-family: "Font Awesome 6 Free";
            font-weight: 900;
            color: var(--success-color);
        }

        .toast.error .toast-icon:before {
            content: "\f00d";
            font-family: "Font Awesome 6 Free";
            font-weight: 900;
            color: var(--danger-color);
        }

        .toast.warning .toast-icon:before {
            content: "\f071";
            font-family: "Font Awesome 6 Free";
            font-weight: 900;
            color: var(--warning-color);
        }

        .toast.info .toast-icon:before {
            content: "\f05a";
            font-family: "Font Awesome 6 Free";
            font-weight: 900;
            color: var(--info-color);
        }

        .toast-message {
            color: var(--gray-700);
            font-weight: 500;
            font-size: 14px;
            line-height: 1.4;
        }

        .toast-close {
            background: none;
            border: none;
            color: var(--gray-400);
            cursor: pointer;
            padding: var(--spacing-sm);
            border-radius: var(--radius-md);
            transition: var(--transition-fast);
            min-width: var(--touch-target-min);
            min-height: var(--touch-target-min);
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }

        .toast-close:active {
            background: var(--gray-100);
            color: var(--gray-600);
            transform: scale(0.95);
        }

        .toast-close:hover {
            background: var(--gray-100);
            color: var(--gray-600);
        }

        /* ===== MOBILE-FIRST EMPTY STATE ===== */
        .no-products {
            text-align: center;
            padding: var(--spacing-3xl) var(--spacing-lg);
        }

        .empty-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: var(--spacing-lg);
            color: var(--gray-500);
        }

        .empty-state i {
            font-size: 48px;
            color: var(--gray-300);
        }

        .empty-state p {
            font-size: 14px;
            margin: 0;
            line-height: 1.4;
        }

        /* ===== RESPONSIVE BREAKPOINTS (PROGRESSIVE ENHANCEMENT) ===== */

        /* Small Mobile Landscape (480px+) */
        @media (min-width: 480px) {
            .search-filter-row {
                flex-direction: row;
                flex-wrap: wrap;
            }

            .search-form {
                flex: 1;
                min-width: 200px;
                order: 1;
            }

            .filter-form {
                flex: 0 0 140px;
                order: 2;
            }

            .add-product-form {
                flex: 0 0 auto;
                order: 3;
            }

            .pagination-container {
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                text-align: left;
            }

            .pagination-info {
                order: 1;
            }

            .pagination-nav {
                order: 2;
            }
        }

        /* Tablet Portrait (576px+) */
        @media (min-width: 576px) {
            html {
                font-size: 15px;
            }

            .page-header {
                flex-direction: row;
                align-items: center;
                gap: var(--spacing-lg);
                min-height: var(--header-height-tablet);
                padding: var(--spacing-lg) var(--spacing-xl);
                padding-left: calc(var(--touch-target-comfortable) + var(--spacing-2xl));
            }

            .user-info {
                display: flex;
            }

            .page-title {
                font-size: 24px;
            }

            .main-content {
                padding: var(--spacing-xl);
            }

            .products-table {
                font-size: 14px;
            }

            .products-table th,
            .products-table td {
                padding: var(--spacing-lg) var(--spacing-md);
            }

            .col-brand {
                display: table-cell;
            }

            .mobile-brand {
                display: none;
            }

            .product-image-wrapper {
                width: 56px;
                height: 56px;
            }

            .product-name {
                font-size: 14px;
                max-width: 200px;
            }

            .table-wrapper {
                min-width: 700px;
            }

            .modal-footer {
                flex-direction: row;
                justify-content: flex-end;
            }

            .modal-footer .btn {
                width: auto;
                min-width: 100px;
            }

            .toast {
                left: auto;
                right: var(--spacing-xl);
                max-width: 400px;
            }
        }

        /* Tablet Landscape (768px+) */
        @media (min-width: 768px) {
            .mobile-menu-toggle {
                display: none;
            }

            .sidebar {
                transform: translateX(0);
                width: var(--sidebar-width-tablet);
                position: relative;
                height: 100vh;
            }

            .sidebar-backdrop {
                display: none;
            }

            .main-content-wrapper {
                margin-left: 0;
            }

            .page-header {
                padding-left: var(--spacing-xl);
            }

            .col-stock {
                display: table-cell;
            }

            .mobile-stock {
                display: none;
            }

            .table-wrapper {
                min-width: 800px;
            }

            .action-buttons .btn-icon {
                width: 40px;
                height: 40px;
                font-size: 14px;
            }

            .pagination-numbers {
                margin: 0 var(--spacing-lg);
            }

            .pagination-btn {
                min-width: 40px;
                height: 40px;
                font-size: 14px;
            }
        }

        /* Desktop (992px+) */
        @media (min-width: 992px) {
            html {
                font-size: 16px;
            }

            .sidebar {
                width: var(--sidebar-width-desktop);
            }

            .page-header {
                min-height: var(--header-height-desktop);
                padding: var(--spacing-xl) var(--spacing-2xl);
            }

            .page-title {
                font-size: 28px;
            }

            .main-content {
                padding: var(--spacing-2xl);
            }

            .search-filter-row {
                gap: var(--spacing-lg);
            }

            .search-form {
                min-width: 300px;
            }

            .filter-form {
                flex: 0 0 180px;
            }

            .products-table th,
            .products-table td {
                padding: var(--spacing-lg);
            }

            .product-image-wrapper {
                width: 60px;
                height: 60px;
            }

            .product-name {
                font-size: 15px;
                max-width: 250px;
            }

            .table-wrapper {
                min-width: 900px;
            }

            .btn-text {
                display: inline;
            }

            .nav-text {
                display: inline;
            }
        }

        /* Large Desktop (1200px+) */
        @media (min-width: 1200px) {
            .main-content {
                padding: var(--spacing-3xl);
            }

            .page-title {
                font-size: 32px;
            }

            .search-form {
                min-width: 350px;
            }

            .table-wrapper {
                min-width: 1000px;
            }

            .product-name {
                max-width: 300px;
            }
        }

        /* ===== PRINT STYLES ===== */
        @media print {
            .sidebar,
            .mobile-menu-toggle,
            .sidebar-backdrop,
            .user-profile,
            .content-actions,
            .pagination-container,
            .modal,
            .toast {
                display: none !important;
            }

            .main-content-wrapper {
                margin-left: 0;
            }

            .main-content {
                padding: 0;
            }

            .products-table {
                border: 1px solid var(--gray-300);
            }

            .products-table th,
            .products-table td {
                border: 1px solid var(--gray-300);
                padding: var(--spacing-sm);
            }

            .page-header {
                border-bottom: 2px solid var(--gray-900);
                padding: var(--spacing-lg) 0;
            }
        }

        /* ===== ACCESSIBILITY & MOTION PREFERENCES ===== */
        @media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }

            .sidebar {
                transition: none;
            }

            .modal-content {
                animation: none;
            }

            .toast {
                animation: none;
            }
        }

        /* Focus styles for keyboard navigation */
        .btn:focus-visible,
        .search-input:focus-visible,
        .category-select:focus-visible,
        .nav-item:focus-visible,
        .pagination-btn:focus-visible,
        .mobile-menu-toggle:focus-visible {
            outline: 2px solid var(--primary-color);
            outline-offset: 2px;
        }

        /* High contrast mode support */
        @media (prefers-contrast: high) {
            :root {
                --gray-100: #f0f0f0;
                --gray-200: #e0e0e0;
                --gray-300: #c0c0c0;
                --border-color: #808080;
            }

            .products-table th,
            .products-table td {
                border: 1px solid var(--gray-600);
            }
        }

        /* Dark mode support (if needed) */
        @media (prefers-color-scheme: dark) {
            /* Dark mode styles can be added here if needed */
        }

        /* Landscape orientation adjustments for mobile */
        @media (max-height: 500px) and (orientation: landscape) {
            .page-header {
                min-height: 48px;
                padding: var(--spacing-sm) var(--spacing-lg);
                padding-left: calc(var(--touch-target-comfortable) + var(--spacing-lg));
            }

            .page-title {
                font-size: 18px;
            }

            .breadcrumb {
                font-size: 11px;
            }

            .main-content {
                padding: var(--spacing-md);
            }

            .sidebar-header {
                padding: var(--spacing-lg) var(--spacing-md);
            }

            .logo {
                font-size: 20px;
            }
        }

        /* iOS Safari specific fixes */
        @supports (-webkit-touch-callout: none) {
            .main-content-wrapper {
                min-height: -webkit-fill-available;
            }

            .sidebar {
                height: -webkit-fill-available;
            }

            .modal {
                height: -webkit-fill-available;
            }
        }

        /* Android Chrome specific fixes */
        @media screen and (-webkit-min-device-pixel-ratio: 0) {
            .search-input,
            .category-select {
                font-size: 16px; /* Prevents zoom on Android */
            }
        }
    </style>
</head>
<body>
    <div class="admin-layout">
        <!-- Mobile Menu Toggle (Always Visible on Mobile) -->
        <button class="mobile-menu-toggle" id="mobileMenuToggle" aria-label="Toggle navigation menu" aria-expanded="false">
            <i class="fas fa-bars"></i>
        </button>

        <!-- Sidebar Backdrop for Mobile -->
        <div class="sidebar-backdrop" id="sidebarBackdrop"></div>

        <!-- Sidebar Navigation -->
        <nav class="sidebar" id="adminSidebar" role="navigation" aria-label="Main navigation" aria-hidden="true">
            <!-- Sidebar Header -->
            <div class="sidebar-header">
                <div class="logo">
                    <span class="logo-text">Chrono</span><span class="logo-accent">X</span>
                </div>
            </div>

            <!-- Navigation Items -->
            <div class="nav-items">
                <a href="/admin/dashboard" class="nav-item" aria-label="Dashboard">
                    <i class="fas fa-tachometer-alt nav-icon"></i>
                    <span class="nav-text">Dashboard</span>
                </a>
                <a href="/admin/product" class="nav-item active" aria-label="Products" aria-current="page">
                    <i class="fas fa-box nav-icon"></i>
                    <span class="nav-text">Products</span>
                </a>
                <a href="/admin/orders" class="nav-item" aria-label="Order List">
                    <i class="fas fa-list nav-icon"></i>
                    <span class="nav-text">Order List</span>
                </a>
                <a href="/admin/returns" class="nav-item" aria-label="Returns">
                    <i class="fas fa-undo nav-icon"></i>
                    <span class="nav-text">Returns</span>
                </a>
                <a href="/admin/userlist" class="nav-item" aria-label="Customers">
                    <i class="fas fa-user nav-icon"></i>
                    <span class="nav-text">Customer</span>
                </a>
                <a href="/admin/sales-report" class="nav-item" aria-label="Sales Report">
                    <i class="fas fa-chart-line nav-icon"></i>
                    <span class="nav-text">Sales Report</span>
                </a>
                <a href="/admin/category" class="nav-item" aria-label="Categories">
                    <i class="fas fa-tags nav-icon"></i>
                    <span class="nav-text">Category</span>
                </a>
                <a href="/admin/coupon" class="nav-item" aria-label="Coupons">
                    <i class="fas fa-ticket-alt nav-icon"></i>
                    <span class="nav-text">Coupons</span>
                </a>
                <a href="/admin/category-offers" class="nav-item" aria-label="Category Offers">
                    <i class="fas fa-percent nav-icon"></i>
                    <span class="nav-text">Category Offers</span>
                </a>
                <a href="/admin/referrals" class="nav-item" aria-label="Referrals">
                    <i class="fas fa-users nav-icon"></i>
                    <span class="nav-text">Referrals</span>
                </a>
            </div>

            <!-- Sidebar Footer -->
            <div class="sidebar-footer">
                <button class="btn btn-outline account-btn">
                    <i class="fas fa-user-cog"></i>
                    <span class="btn-text">Account</span>
                </button>
                <a href="/admin/logout" class="btn btn-dark logout-btn">
                    <i class="fas fa-sign-out-alt"></i>
                    <span class="btn-text">Logout</span>
                </a>
            </div>
        </nav>

        <!-- Main Content Wrapper -->
        <div class="main-content-wrapper">
            <!-- Page Header -->
            <header class="page-header">
                <div class="header-content">
                    <!-- Breadcrumb Navigation -->
                    <nav class="breadcrumb-nav" aria-label="Breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="/admin/dashboard" class="breadcrumb-link">Dashboard</a>
                                <i class="fas fa-chevron-right breadcrumb-separator" aria-hidden="true"></i>
                            </li>
                            <li class="breadcrumb-item">
                                <span class="breadcrumb-current" aria-current="page">Products</span>
                            </li>
                        </ol>
                    </nav>

                    <!-- Page Title -->
                    <h1 class="page-title">Products</h1>
                </div>

                <!-- User Profile -->
                <div class="user-profile" role="button" tabindex="0" aria-label="User profile menu">
                    <div class="user-avatar">
                        <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="Deepak" class="avatar-image">
                    </div>
                    <div class="user-info">
                        <div class="user-name">Deepak</div>
                        <div class="user-role">Admin</div>
                    </div>
                </div>
            </header>

            <!-- Products Content -->
            <main class="main-content">
                <!-- Search and Actions Section -->
                <section class="content-actions" aria-label="Product actions">
                    <div class="search-filter-row">
                        <!-- Search Form -->
                        <form action="/admin/product" method="get" class="search-form" role="search">
                            <div class="search-input-group">
                                <i class="fas fa-search search-icon" aria-hidden="true"></i>
                                <input 
                                    type="search" 
                                    value="<%= search || '' %>" 
                                    name="search" 
                                    placeholder="Search products..."
                                    class="search-input"
                                    aria-label="Search products"
                                    autocomplete="off"
                                    spellcheck="false"
                                >
                                <% if (search) { %>
                                    <a href="/admin/product" class="search-clear" aria-label="Clear search">
                                        <i class="fas fa-times" aria-hidden="true"></i>
                                    </a>
                                <% } %>
                            </div>
                        </form>

                        <!-- Category Filter -->
                        <form method="get" action="/admin/product" class="filter-form">
                            <% if (search) { %>
                                <input type="hidden" name="search" value="<%= search %>">
                            <% } %>
                            <select 
                                name="category" 
                                onchange="this.form.submit()" 
                                class="category-select"
                                aria-label="Filter by category"
                            >
                                <option value="all">All Categories</option>
                                <% if (typeof categories !== 'undefined' && categories) { %>
                                    <% categories.forEach(category => { %>
                                        <option 
                                            value="<%= category.name %>" 
                                            <%= selectedCategory === category.name ? 'selected' : '' %>
                                        >
                                            <%= category.name %>
                                        </option>
                                    <% }) %>
                                <% } %>
                            </select>
                        </form>

                        <!-- Add Product Button -->
                        <form action="/admin/addproduct" method="get" class="add-product-form">
                            <button type="submit" class="btn btn-primary add-product-btn">
                                <i class="fas fa-plus" aria-hidden="true"></i>
                                <span class="btn-text">Add Product</span>
                            </button>
                        </form>
                    </div>
                </section>

                <!-- Products Table Section -->
                <section class="products-section" aria-label="Products list">
                    <div class="table-container" role="region" aria-label="Products table" tabindex="0">
                        <div class="table-wrapper">
                            <table class="products-table" role="table">
                                <thead>
                                    <tr role="row">
                                        <th scope="col" class="col-image">Image</th>
                                        <th scope="col" class="col-name">Product Name</th>
                                        <th scope="col" class="col-brand">Brand</th>
                                        <th scope="col" class="col-price">Price</th>
                                        <th scope="col" class="col-stock">Stock</th>
                                        <th scope="col" class="col-status">Status</th>
                                        <th scope="col" class="col-actions">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if (typeof products !== 'undefined' && products && products.length > 0) { %>
                                        <% products.forEach((product, index) => { %>
                                            <tr class="product-row" data-product-id="<%= product._id %>" role="row">
                                                <!-- Product Image -->
                                                <td class="col-image" role="gridcell">
                                                    <div class="product-image-wrapper">
                                                        <% if (product.images && product.images.length > 0 && product.images[0].public_id) { %>
                                                            <img 
                                                                src="https://res.cloudinary.com/<%= typeof cloudName !== 'undefined' ? cloudName : 'demo' %>/image/upload/w_120,h_120,c_fill,f_auto,q_auto/<%= product.images[0].public_id %>" 
                                                                alt="<%= product.name %>"
                                                                class="product-image"
                                                                loading="lazy"
                                                                onerror="this.src='/placeholder.svg?height=60&width=60&text=No+Image'"
                                                            >
                                                        <% } else { %>
                                                            <img 
                                                                src="/placeholder.svg?height=60&width=60&text=No+Image" 
                                                                alt="No image available for <%= product.name %>"
                                                                class="product-image"
                                                                loading="lazy"
                                                            >
                                                        <% } %>
                                                    </div>
                                                </td>

                                                <!-- Product Name -->
                                                <td class="col-name" role="gridcell">
                                                    <div class="product-name" title="<%= product.name %>">
                                                        <%= product.name %>
                                                    </div>
                                                    <!-- Mobile-only brand info -->
                                                    <div class="mobile-brand">
                                                        <%= product.brand || 'N/A' %>
                                                    </div>
                                                </td>

                                                <!-- Brand (Hidden on mobile) -->
                                                <td class="col-brand" role="gridcell">
                                                    <%= product.brand || 'N/A' %>
                                                </td>

                                                <!-- Price -->
                                                <td class="col-price" role="gridcell">
                                                    <span class="price-value">
                                                        ₹<%= product.variants && product.variants[0] ? (product.variants[0].salePrice || 0) : 0 %>
                                                    </span>
                                                    <!-- Mobile-only stock info -->
                                                    <div class="mobile-stock">
                                                        Stock: <%= product.variants && product.variants[0] ? (product.variants[0].quantity || 0) : 0 %>
                                                    </div>
                                                </td>

                                                <!-- Stock (Hidden on mobile) -->
                                                <td class="col-stock" role="gridcell">
                                                    <%= product.variants && product.variants[0] ? (product.variants[0].quantity || 0) : 0 %>
                                                </td>

                                                <!-- Status Toggle -->
                                                <td class="col-status" role="gridcell">
                                                    <label class="status-switch" aria-label="Toggle product status for <%= product.name %>">
                                                        <input 
                                                            type="checkbox" 
                                                            <%= product.isActive ? 'checked' : '' %>
                                                            onchange="toggleProductStatus('<%= product._id %>')"
                                                            class="status-checkbox"
                                                            aria-describedby="status-help-<%= index %>"
                                                        >
                                                        <span class="status-slider"></span>
                                                        <span id="status-help-<%= index %>" class="sr-only">
                                                            <%= product.isActive ? 'Product is active' : 'Product is inactive' %>
                                                        </span>
                                                    </label>
                                                </td>

                                                <!-- Actions -->
                                                <td class="col-actions" role="gridcell">
                                                    <div class="action-buttons">
                                                        <button 
                                                            class="btn btn-icon btn-edit" 
                                                            onclick="editProduct('<%= product._id %>')"
                                                            aria-label="Edit <%= product.name %>"
                                                            title="Edit Product"
                                                        >
                                                            <i class="fas fa-edit" aria-hidden="true"></i>
                                                        </button>
                                                        <button 
                                                            class="btn btn-icon btn-delete" 
                                                            onclick="openDeleteModal('<%= product._id %>')"
                                                            aria-label="Delete <%= product.name %>"
                                                            title="Delete Product"
                                                        >
                                                            <i class="fas fa-trash" aria-hidden="true"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        <% }) %>
                                    <% } else { %>
                                        <tr role="row">
                                            <td colspan="7" class="no-products" role="gridcell">
                                                <div class="empty-state">
                                                    <i class="fas fa-box-open" aria-hidden="true"></i>
                                                    <p>No products found</p>
                                                    <% if (search || (selectedCategory && selectedCategory !== 'all')) { %>
                                                        <a href="/admin/product" class="btn btn-outline">
                                                            <i class="fas fa-refresh" aria-hidden="true"></i>
                                                            Clear Filters
                                                        </a>
                                                    <% } %>
                                                </div>
                                            </td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Pagination -->
                    <div class="pagination-container">
                        <div class="pagination-info">
                            <span class="results-text">
                                <% 
                                const currentPage = typeof page !== 'undefined' ? parseInt(page) : 1;
                                const totalPages = typeof totalPage !== 'undefined' ? parseInt(totalPage) : 1;
                                const totalItems = typeof totalProducts !== 'undefined' ? parseInt(totalProducts) : 0;
                                const itemsPerPage = typeof limit !== 'undefined' ? parseInt(limit) : 10;
                                const startItem = Math.max(1, (currentPage - 1) * itemsPerPage + 1);
                                const endItem = Math.min(currentPage * itemsPerPage, totalItems);
                                %>
                                Showing <%= startItem %> - <%= endItem %> of <%= totalItems %> results
                            </span>
                        </div>

                        <nav class="pagination-nav" aria-label="Pagination Navigation">
                            <div class="pagination-controls">
                                <!-- Previous Button -->
                                <% if (currentPage > 1) { %>
                                    <a 
                                        href="/admin/product?page=<%= currentPage - 1 %>&search=<%= search || '' %>&category=<%= selectedCategory || 'all' %>" 
                                        class="pagination-btn pagination-prev"
                                        aria-label="Go to previous page"
                                    >
                                        <i class="fas fa-chevron-left" aria-hidden="true"></i>
                                        <span class="btn-text">Previous</span>
                                    </a>
                                <% } else { %>
                                    <button class="pagination-btn pagination-prev" disabled aria-label="Previous page (disabled)">
                                        <i class="fas fa-chevron-left" aria-hidden="true"></i>
                                        <span class="btn-text">Previous</span>
                                    </button>
                                <% } %>

                                <!-- Page Numbers -->
                                <div class="pagination-numbers">
                                    <% 
                                    let startPage = Math.max(1, currentPage - 2);
                                    let endPage = Math.min(totalPages, currentPage + 2);
                                    
                                    if (endPage - startPage < 4) {
                                        if (startPage === 1) {
                                            endPage = Math.min(totalPages, startPage + 4);
                                        } else {
                                            startPage = Math.max(1, endPage - 4);
                                        }
                                    }
                                    %>

                                    <% if (startPage > 1) { %>
                                        <a 
                                            href="/admin/product?page=1&search=<%= search || '' %>&category=<%= selectedCategory || 'all' %>" 
                                            class="pagination-btn pagination-number"
                                            aria-label="Go to page 1"
                                        >1</a>
                                        <% if (startPage > 2) { %>
                                            <span class="pagination-ellipsis" aria-hidden="true">...</span>
                                        <% } %>
                                    <% } %>

                                    <% for (let i = startPage; i <= endPage; i++) { %>
                                        <% if (i === currentPage) { %>
                                            <button class="pagination-btn pagination-number active" aria-current="page" aria-label="Current page, page <%= i %>">
                                                <%= i %>
                                            </button>
                                        <% } else { %>
                                            <a 
                                                href="/admin/product?page=<%= i %>&search=<%= search || '' %>&category=<%= selectedCategory || 'all' %>" 
                                                class="pagination-btn pagination-number"
                                                aria-label="Go to page <%= i %>"
                                            >
                                                <%= i %>
                                            </a>
                                        <% } %>
                                    <% } %>

                                    <% if (endPage < totalPages) { %>
                                        <% if (endPage < totalPages - 1) { %>
                                            <span class="pagination-ellipsis" aria-hidden="true">...</span>
                                        <% } %>
                                        <a 
                                            href="/admin/product?page=<%= totalPages %>&search=<%= search || '' %>&category=<%= selectedCategory || 'all' %>" 
                                            class="pagination-btn pagination-number"
                                            aria-label="Go to page <%= totalPages %>"
                                        >
                                            <%= totalPages %>
                                        </a>
                                    <% } %>
                                </div>

                                <!-- Next Button -->
                                <% if (currentPage < totalPages) { %>
                                    <a 
                                        href="/admin/product?page=<%= currentPage + 1 %>&search=<%= search || '' %>&category=<%= selectedCategory || 'all' %>" 
                                        class="pagination-btn pagination-next"
                                        aria-label="Go to next page"
                                    >
                                        <span class="btn-text">Next</span>
                                        <i class="fas fa-chevron-right" aria-hidden="true"></i>
                                    </a>
                                <% } else { %>
                                    <button class="pagination-btn pagination-next" disabled aria-label="Next page (disabled)">
                                        <span class="btn-text">Next</span>
                                        <i class="fas fa-chevron-right" aria-hidden="true"></i>
                                    </button>
                                <% } %>
                            </div>
                        </nav>
                    </div>
                </section>
            </main>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="modal" role="dialog" aria-labelledby="deleteModalTitle" aria-hidden="true" aria-modal="true">
        <div class="modal-overlay" onclick="closeDeleteModal()" aria-label="Close modal"></div>
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="deleteModalTitle" class="modal-title">
                    <i class="fas fa-exclamation-triangle" aria-hidden="true"></i>
                    Confirm Deletion
                </h3>
                <button class="modal-close" onclick="closeDeleteModal()" aria-label="Close modal">
                    <i class="fas fa-times" aria-hidden="true"></i>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this product? This action cannot be undone and will permanently remove the product from your inventory.</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline" onclick="closeDeleteModal()">
                    <i class="fas fa-times" aria-hidden="true"></i>
                    Cancel
                </button>
                <button class="btn btn-danger" onclick="confirmDelete()">
                    <i class="fas fa-trash" aria-hidden="true"></i>
                    Yes, Delete
                </button>
            </div>
        </div>
    </div>

    <!-- Toast Notification -->
    <div id="toast" class="toast" role="alert" aria-live="polite" aria-atomic="true">
        <div class="toast-content">
            <i class="toast-icon" aria-hidden="true"></i>
            <span class="toast-message"></span>
        </div>
        <button class="toast-close" onclick="hideToast()" aria-label="Close notification">
            <i class="fas fa-times" aria-hidden="true"></i>
        </button>
    </div>

    <!-- Screen Reader Only Content -->
    <div class="sr-only" aria-live="polite" id="screenReaderAnnouncements"></div>

    <script>
        // ===== ENHANCED MOBILE-FIRST ADMIN DASHBOARD =====
        class MobileOptimizedAdminDashboard {
            constructor() {
                this.currentProductId = null;
                this.touchStartX = 0;
                this.touchEndX = 0;
                this.touchStartY = 0;
                this.touchEndY = 0;
                this.isScrolling = false;
                this.scrollTimeout = null;
                this.resizeTimeout = null;
                this.init();
            }

            init() {
                this.setupEventListeners();
                this.setupMobileMenu();
                this.setupSearch();
                this.setupModals();
                this.setupToast();
                this.handleResponsiveTable();
                this.setupAccessibility();
                this.setupPerformanceOptimizations();
                this.detectMobileFeatures();
            }

            setupEventListeners() {
                // Mobile menu toggle with enhanced touch support
                const mobileMenuToggle = document.getElementById('mobileMenuToggle');
                if (mobileMenuToggle) {
                    mobileMenuToggle.addEventListener('click', (e) => {
                        e.preventDefault();
                        this.toggleMobileMenu();
                    });

                    // Touch events for better mobile responsiveness
                    mobileMenuToggle.addEventListener('touchstart', (e) => {
                        e.preventDefault();
                        mobileMenuToggle.style.transform = 'scale(0.95)';
                    });

                    mobileMenuToggle.addEventListener('touchend', (e) => {
                        e.preventDefault();
                        mobileMenuToggle.style.transform = '';
                        this.toggleMobileMenu();
                    });
                }

                // Enhanced backdrop handling
                const backdrop = document.getElementById('sidebarBackdrop');
                if (backdrop) {
                    backdrop.addEventListener('click', () => this.closeMobileMenu());
                    backdrop.addEventListener('touchstart', (e) => {
                        e.preventDefault();
                        this.closeMobileMenu();
                    });
                }

                // Improved window resize handling with debouncing
                window.addEventListener('resize', () => {
                    clearTimeout(this.resizeTimeout);
                    this.resizeTimeout = setTimeout(() => {
                        this.handleResize();
                        this.updateScrollIndicators();
                    }, 150);
                });

                // Enhanced keyboard navigation
                document.addEventListener('keydown', (e) => this.handleKeyboardNavigation(e));

                // Form submission handlers
                this.setupFormHandlers();

                // Orientation change handling
                window.addEventListener('orientationchange', () => {
                    setTimeout(() => {
                        this.handleResize();
                        this.updateScrollIndicators();
                    }, 100);
                });

                // Visibility change handling for performance
                document.addEventListener('visibilitychange', () => {
                    if (document.hidden) {
                        this.pauseAnimations();
                    } else {
                        this.resumeAnimations();
                    }
                });
            }

            setupMobileMenu() {
                const sidebar = document.getElementById('adminSidebar');
                const backdrop = document.getElementById('sidebarBackdrop');
                
                if (sidebar) {
                    // Enhanced touch support with gesture recognition
                    sidebar.addEventListener('touchstart', (e) => {
                        this.touchStartX = e.changedTouches[0].screenX;
                        this.touchStartY = e.changedTouches[0].screenY;
                        this.isScrolling = false;
                    }, { passive: true });

                    sidebar.addEventListener('touchmove', (e) => {
                        if (!this.isScrolling) {
                            const touchX = e.changedTouches[0].screenX;
                            const touchY = e.changedTouches[0].screenY;
                            const deltaX = Math.abs(touchX - this.touchStartX);
                            const deltaY = Math.abs(touchY - this.touchStartY);
                            
                            // Determine if this is a horizontal swipe or vertical scroll
                            if (deltaX > deltaY && deltaX > 10) {
                                this.isScrolling = false;
                                // Prevent vertical scrolling during horizontal swipe
                                e.preventDefault();
                            } else if (deltaY > deltaX) {
                                this.isScrolling = true;
                            }
                        }
                    }, { passive: false });

                    sidebar.addEventListener('touchend', (e) => {
                        if (!this.isScrolling) {
                            this.touchEndX = e.changedTouches[0].screenX;
                            this.touchEndY = e.changedTouches[0].screenY;
                            this.handleSwipe();
                        }
                    }, { passive: true });

                    // Prevent body scroll when sidebar is open
                    sidebar.addEventListener('scroll', (e) => {
                        e.stopPropagation();
                    });
                }
            }

            toggleMobileMenu() {
                const sidebar = document.getElementById('adminSidebar');
                const backdrop = document.getElementById('sidebarBackdrop');
                const toggleBtn = document.getElementById('mobileMenuToggle');
                
                if (sidebar && backdrop && toggleBtn) {
                    const isOpen = sidebar.classList.contains('active');
                    
                    if (isOpen) {
                        this.closeMobileMenu();
                    } else {
                        this.openMobileMenu();
                    }
                }
            }

            openMobileMenu() {
                const sidebar = document.getElementById('adminSidebar');
                const backdrop = document.getElementById('sidebarBackdrop');
                const toggleBtn = document.getElementById('mobileMenuToggle');
                const body = document.body;
                
                if (sidebar && backdrop && toggleBtn) {
                    sidebar.classList.add('active');
                    backdrop.classList.add('active');
                    toggleBtn.classList.add('active');
                    body.classList.add('menu-open');
                    
                    // Update ARIA attributes
                    sidebar.setAttribute('aria-hidden', 'false');
                    toggleBtn.setAttribute('aria-expanded', 'true');
                    
                    // Update icon
                    const icon = toggleBtn.querySelector('i');
                    if (icon) {
                        icon.className = 'fas fa-times';
                    }
                    
                    // Focus management
                    const firstNavItem = sidebar.querySelector('.nav-item');
                    if (firstNavItem) {
                        setTimeout(() => firstNavItem.focus(), 100);
                    }
                    
                    // Announce to screen readers
                    this.announceToScreenReader('Navigation menu opened');
                }
            }

            closeMobileMenu() {
                const sidebar = document.getElementById('adminSidebar');
                const backdrop = document.getElementById('sidebarBackdrop');
                const toggleBtn = document.getElementById('mobileMenuToggle');
                const body = document.body;
                
                if (sidebar && backdrop && toggleBtn) {
                    sidebar.classList.remove('active');
                    backdrop.classList.remove('active');
                    toggleBtn.classList.remove('active');
                    body.classList.remove('menu-open');
                    
                    // Update ARIA attributes
                    sidebar.setAttribute('aria-hidden', 'true');
                    toggleBtn.setAttribute('aria-expanded', 'false');
                    
                    // Update icon
                    const icon = toggleBtn.querySelector('i');
                    if (icon) {
                        icon.className = 'fas fa-bars';
                    }
                    
                    // Return focus to toggle button
                    toggleBtn.focus();
                    
                    // Announce to screen readers
                    this.announceToScreenReader('Navigation menu closed');
                }
            }

            handleSwipe() {
                const differenceX = this.touchStartX - this.touchEndX;
                const differenceY = Math.abs(this.touchStartY - this.touchEndY);
                const isLeftSwipe = differenceX > 50;
                const isHorizontalSwipe = Math.abs(differenceX) > differenceY;
                
                if (isLeftSwipe && isHorizontalSwipe) {
                    this.closeMobileMenu();
                }
            }

            handleResize() {
                const sidebar = document.getElementById('adminSidebar');
                const backdrop = document.getElementById('sidebarBackdrop');
                const body = document.body;
                
                // Close mobile menu on larger screens
                if (window.innerWidth >= 768) {
                    if (sidebar) {
                        sidebar.classList.remove('active');
                        sidebar.setAttribute('aria-hidden', 'false');
                    }
                    if (backdrop) {
                        backdrop.classList.remove('active');
                    }
                    if (body) {
                        body.classList.remove('menu-open');
                    }
                    
                    const toggleBtn = document.getElementById('mobileMenuToggle');
                    if (toggleBtn) {
                        toggleBtn.classList.remove('active');
                        toggleBtn.setAttribute('aria-expanded', 'false');
                        const icon = toggleBtn.querySelector('i');
                        if (icon) {
                            icon.className = 'fas fa-bars';
                        }
                    }
                }
                
                // Update table scroll indicators
                this.updateScrollIndicators();
                
                // Adjust viewport height for mobile browsers
                this.adjustViewportHeight();
            }

            adjustViewportHeight() {
                // Fix for mobile browsers with dynamic viewport
                const vh = window.innerHeight * 0.01;
                document.documentElement.style.setProperty('--vh', `${vh}px`);
            }

            setupSearch() {
                const searchInput = document.querySelector('.search-input');
                if (searchInput) {
                    let searchTimeout;
                    
                    // Enhanced search with better mobile support
                    searchInput.addEventListener('input', (e) => {
                        clearTimeout(searchTimeout);
                        searchTimeout = setTimeout(() => {
                            this.performSearch(e.target.value);
                        }, 500); // Increased delay for mobile typing
                    });

                    // Handle search form submission
                    const searchForm = document.querySelector('.search-form');
                    if (searchForm) {
                        searchForm.addEventListener('submit', (e) => {
                            e.preventDefault();
                            this.performSearch(searchInput.value);
                        });
                    }
                    
                    // Mobile-specific enhancements
                    searchInput.addEventListener('focus', () => {
                        // Scroll input into view on mobile
                        if (window.innerWidth < 768) {
                            setTimeout(() => {
                                searchInput.scrollIntoView({ 
                                    behavior: 'smooth', 
                                    block: 'center' 
                                });
                            }, 300);
                        }
                    });
                }
            }

            performSearch(query) {
                // Show loading state
                this.showLoadingState();
                
                // Update URL with search parameter
                const url = new URL(window.location);
                if (query.trim()) {
                    url.searchParams.set('search', query);
                } else {
                    url.searchParams.delete('search');
                }
                url.searchParams.set('page', '1');
                
                // Announce search to screen readers
                this.announceToScreenReader(`Searching for ${query || 'all products'}`);
                
                window.location.href = url.toString();
            }

            showLoadingState() {
                const searchInput = document.querySelector('.search-input');
                const addButton = document.querySelector('.add-product-btn');
                
                if (searchInput) {
                    searchInput.style.opacity = '0.6';
                }
                if (addButton) {
                    addButton.disabled = true;
                    addButton.style.opacity = '0.6';
                }
            }

            setupModals() {
                const deleteModal = document.getElementById('deleteModal');
                if (deleteModal) {
                    // Enhanced modal handling for mobile
                    deleteModal.addEventListener('click', (e) => {
                        if (e.target === deleteModal) {
                            this.closeDeleteModal();
                        }
                    });

                    // Touch handling for modal
                    deleteModal.addEventListener('touchstart', (e) => {
                        if (e.target === deleteModal) {
                            e.preventDefault();
                            this.closeDeleteModal();
                        }
                    });

                    // Prevent modal content from closing modal
                    const modalContent = deleteModal.querySelector('.modal-content');
                    if (modalContent) {
                        modalContent.addEventListener('click', (e) => {
                            e.stopPropagation();
                        });
                        modalContent.addEventListener('touchstart', (e) => {
                            e.stopPropagation();
                        });
                    }
                }
            }

            setupToast() {
                const toast = document.getElementById('toast');
                if (toast) {
                    // Enhanced toast for mobile with swipe to dismiss
                    let startX = 0;
                    let currentX = 0;
                    let isDragging = false;
                    
                    toast.addEventListener('touchstart', (e) => {
                        startX = e.touches[0].clientX;
                        isDragging = true;
                        toast.style.transition = 'none';
                    }, { passive: true });
                    
                    toast.addEventListener('touchmove', (e) => {
                        if (!isDragging) return;
                        
                        currentX = e.touches[0].clientX;
                        const deltaX = currentX - startX;
                        
                        if (deltaX > 0) {
                            toast.style.transform = `translateX(${deltaX}px)`;
                            toast.style.opacity = Math.max(0.3, 1 - deltaX / 200);
                        }
                    }, { passive: true });
                    
                    toast.addEventListener('touchend', () => {
                        if (!isDragging) return;
                        
                        isDragging = false;
                        toast.style.transition = '';
                        
                        const deltaX = currentX - startX;
                        if (deltaX > 100) {
                            this.hideToast();
                        } else {
                            toast.style.transform = '';
                            toast.style.opacity = '';
                        }
                    }, { passive: true });
                    
                    // Auto-hide with observer
                    const observer = new MutationObserver((mutations) => {
                        mutations.forEach((mutation) => {
                            if (mutation.type === 'class' && toast.classList.contains('show')) {
                                setTimeout(() => {
                                    this.hideToast();
                                }, 5000);
                            }
                        });
                    });
                    observer.observe(toast, { attributes: true, attributeFilter: ['class'] });
                }
            }

            setupFormHandlers() {
                // Enhanced category filter with loading state
                const categorySelect = document.querySelector('.category-select');
                if (categorySelect) {
                    categorySelect.addEventListener('change', (e) => {
                        const form = e.target.closest('form');
                        if (form) {
                            e.target.disabled = true;
                            e.target.style.opacity = '0.6';
                            
                            // Add loading indicator
                            const loadingText = document.createElement('option');
                            loadingText.textContent = 'Loading...';
                            loadingText.disabled = true;
                            e.target.appendChild(loadingText);
                            
                            form.submit();
                        }
                    });
                }
            }

            handleResponsiveTable() {
                const table = document.querySelector('.products-table');
                const tableContainer = document.querySelector('.table-container');

                if (table && tableContainer) {
                    // Enhanced scroll indicators
                    this.updateScrollIndicators();

                    tableContainer.addEventListener('scroll', () => {
                        clearTimeout(this.scrollTimeout);
                        this.scrollTimeout = setTimeout(() => {
                            this.updateScrollIndicators();
                        }, 10);
                    }, { passive: true });
                    
                    // Touch scroll enhancement for iOS
                    tableContainer.style.webkitOverflowScrolling = 'touch';
                    
                    // Add momentum scrolling for better mobile experience
                    tableContainer.addEventListener('touchstart', () => {
                        tableContainer.style.webkitOverflowScrolling = 'auto';
                    }, { passive: true });
                    
                    tableContainer.addEventListener('touchend', () => {
                        tableContainer.style.webkitOverflowScrolling = 'touch';
                    }, { passive: true });
                }
            }

            updateScrollIndicators() {
                const container = document.querySelector('.table-container');
                if (!container) return;

                const isScrollable = container.scrollWidth > container.clientWidth;
                const isAtStart = container.scrollLeft <= 5; // Small threshold for touch precision
                const isAtEnd = container.scrollLeft >= container.scrollWidth - container.clientWidth - 5;

                container.classList.toggle('scrollable', isScrollable);
                container.classList.toggle('scroll-start', isAtStart);
                container.classList.toggle('scroll-end', isAtEnd);
                
                // Update ARIA labels for accessibility
                if (isScrollable) {
                    container.setAttribute('aria-label', 
                        `Products table, scrollable. ${isAtStart ? 'At start' : isAtEnd ? 'At end' : 'Scroll to see more'}`
                    );
                }
            }

            setupAccessibility() {
                // Enhanced keyboard navigation
                this.setupKeyboardTraps();
                this.setupFocusManagement();
                this.setupScreenReaderSupport();
            }

            setupKeyboardTraps() {
                // Trap focus in modal when open
                const modal = document.getElementById('deleteModal');
                if (modal) {
                    modal.addEventListener('keydown', (e) => {
                        if (e.key === 'Tab') {
                            this.trapFocus(e, modal);
                        }
                    });
                }
                
                // Trap focus in sidebar when open on mobile
                const sidebar = document.getElementById('adminSidebar');
                if (sidebar) {
                    sidebar.addEventListener('keydown', (e) => {
                        if (e.key === 'Tab' && window.innerWidth < 768 && sidebar.classList.contains('active')) {
                            this.trapFocus(e, sidebar);
                        }
                    });
                }
            }

            trapFocus(e, container) {
                const focusableElements = container.querySelectorAll(
                    'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'
                );
                const firstElement = focusableElements[0];
                const lastElement = focusableElements[focusableElements.length - 1];

                if (e.shiftKey) {
                    if (document.activeElement === firstElement) {
                        e.preventDefault();
                        lastElement.focus();
                    }
                } else {
                    if (document.activeElement === lastElement) {
                        e.preventDefault();
                        firstElement.focus();
                    }
                }
            }

            setupFocusManagement() {
                // Enhanced focus management for mobile
                const focusableElements = document.querySelectorAll(
                    'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'
                );
                
                focusableElements.forEach(element => {
                    element.addEventListener('focus', () => {
                        // Ensure focused element is visible on mobile
                        if (window.innerWidth < 768) {
                            setTimeout(() => {
                                element.scrollIntoView({ 
                                    behavior: 'smooth', 
                                    block: 'nearest',
                                    inline: 'nearest'
                                });
                            }, 100);
                        }
                    });
                });
            }

            setupScreenReaderSupport() {
                // Enhanced screen reader announcements
                this.announcements = document.getElementById('screenReaderAnnouncements');
                if (!this.announcements) {
                    this.announcements = document.createElement('div');
                    this.announcements.id = 'screenReaderAnnouncements';
                    this.announcements.className = 'sr-only';
                    this.announcements.setAttribute('aria-live', 'polite');
                    this.announcements.setAttribute('aria-atomic', 'true');
                    document.body.appendChild(this.announcements);
                }
            }

            announceToScreenReader(message) {
                if (this.announcements) {
                    this.announcements.textContent = message;
                    setTimeout(() => {
                        this.announcements.textContent = '';
                    }, 1000);
                }
            }

            handleKeyboardNavigation(e) {
                // Enhanced keyboard shortcuts
                if (e.key === 'Escape') {
                    if (document.getElementById('deleteModal').classList.contains('show')) {
                        this.closeDeleteModal();
                    } else if (document.getElementById('adminSidebar').classList.contains('active')) {
                        this.closeMobileMenu();
                    }
                }
                
                // Quick search focus
                if (e.key === '/' && !e.target.matches('input, textarea, select')) {
                    e.preventDefault();
                    const searchInput = document.querySelector('.search-input');
                    if (searchInput) {
                        searchInput.focus();
                    }
                }
                
                // Menu toggle
                if (e.key === 'm' && e.ctrlKey && window.innerWidth < 768) {
                    e.preventDefault();
                    this.toggleMobileMenu();
                }
            }

            setupPerformanceOptimizations() {
                // Intersection Observer for lazy loading
                if ('IntersectionObserver' in window) {
                    const imageObserver = new IntersectionObserver((entries) => {
                        entries.forEach(entry => {
                            if (entry.isIntersecting) {
                                const img = entry.target;
                                if (img.dataset.src) {
                                    img.src = img.dataset.src;
                                    img.removeAttribute('data-src');
                                    imageObserver.unobserve(img);
                                }
                            }
                        });
                    }, {
                        rootMargin: '50px'
                    });
                    
                    document.querySelectorAll('img[data-src]').forEach(img => {
                        imageObserver.observe(img);
                    });
                }
                
                // Passive event listeners for better scroll performance
                document.addEventListener('scroll', this.throttle(() => {
                    this.updateScrollIndicators();
                }, 16), { passive: true });
            }

            detectMobileFeatures() {
                // Detect and adapt to mobile features
                const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
                const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
                const isAndroid = /Android/.test(navigator.userAgent);
                
                if (isTouchDevice) {
                    document.body.classList.add('touch-device');
                }
                
                if (isIOS) {
                    document.body.classList.add('ios-device');
                    // iOS specific optimizations
                    this.setupIOSOptimizations();
                }
                
                if (isAndroid) {
                    document.body.classList.add('android-device');
                    // Android specific optimizations
                    this.setupAndroidOptimizations();
                }
                
                // Detect if device supports hover
                if (window.matchMedia('(hover: hover)').matches) {
                    document.body.classList.add('hover-support');
                }
            }

            setupIOSOptimizations() {
                // Fix iOS viewport issues
                const viewport = document.querySelector('meta[name="viewport"]');
                if (viewport) {
                    viewport.setAttribute('content', 
                        'width=device-width, initial-scale=1.0, user-scalable=no, maximum-scale=1.0, viewport-fit=cover'
                    );
                }
                
                // Fix iOS scroll bounce
                document.addEventListener('touchmove', (e) => {
                    if (e.target.closest('.sidebar, .modal-content, .table-container')) {
                        return;
                    }
                    e.preventDefault();
                }, { passive: false });
            }

            setupAndroidOptimizations() {
                // Android specific optimizations
                const inputs = document.querySelectorAll('input, select, textarea');
                inputs.forEach(input => {
                    input.addEventListener('focus', () => {
                        // Prevent zoom on focus for Android
                        if (input.style.fontSize !== '16px') {
                            input.style.fontSize = '16px';
                        }
                    });
                });
            }

            pauseAnimations() {
                document.body.classList.add('animations-paused');
            }

            resumeAnimations() {
                document.body.classList.remove('animations-paused');
            }

            // Product Management Methods (Enhanced for Mobile)
            editProduct(productId) {
                if (productId) {
                    this.showLoadingState();
                    this.announceToScreenReader('Navigating to edit product');
                    window.location.href = `/admin/editproduct/edit/${productId}`;
                }
            }

            openDeleteModal(productId) {
                this.currentProductId = productId;
                const modal = document.getElementById('deleteModal');
                const body = document.body;
                
                if (modal) {
                    modal.classList.add('show');
                    modal.setAttribute('aria-hidden', 'false');
                    body.classList.add('menu-open');
                    
                    // Enhanced focus management
                    const firstButton = modal.querySelector('.modal-footer .btn');
                    if (firstButton) {
                        setTimeout(() => firstButton.focus(), 100);
                    }
                    
                    // Prevent body scroll
                    body.style.overflow = 'hidden';
                    
                    this.announceToScreenReader('Delete confirmation dialog opened');
                }
            }

            closeDeleteModal() {
                const modal = document.getElementById('deleteModal');
                const body = document.body;
                
                if (modal) {
                    modal.classList.remove('show');
                    modal.setAttribute('aria-hidden', 'true');
                    body.classList.remove('menu-open');
                    this.currentProductId = null;
                    
                    // Restore body scroll
                    body.style.overflow = '';
                    
                    // Return focus to trigger button
                    const triggerButton = document.querySelector(`[data-product-id="${this.currentProductId}"] .btn-delete`);
                    if (triggerButton) {
                        triggerButton.focus();
                    }
                    
                    this.announceToScreenReader('Delete confirmation dialog closed');
                }
            }

            async confirmDelete() {
                if (!this.currentProductId) return;

                try {
                    const confirmBtn = document.querySelector('.modal-footer .btn-danger');
                    if (confirmBtn) {
                        confirmBtn.disabled = true;
                        confirmBtn.innerHTML = '<i class="fas fa-spinner fa-spin" aria-hidden="true"></i> Deleting...';
                        confirmBtn.setAttribute('aria-label', 'Deleting product, please wait');
                    }

                    this.announceToScreenReader('Deleting product, please wait');

                    const response = await fetch(`/admin/product/${this.currentProductId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });

                    const result = await response.json();

                    if (response.ok && result.success) {
                        this.showToast(result.message || 'Product deleted successfully!', 'success');
                        this.announceToScreenReader('Product deleted successfully');

                        const productRow = document.querySelector(`[data-product-id="${this.currentProductId}"]`);
                        if (productRow) {
                            productRow.style.transition = 'opacity 0.3s ease-out, transform 0.3s ease-out';
                            productRow.style.opacity = '0';
                            productRow.style.transform = 'translateX(100%)';
                            
                            setTimeout(() => {
                                productRow.remove();
                                this.updateEmptyState();
                            }, 300);
                        }

                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    } else {
                        this.showToast('Error: ' + (result.message || 'Failed to delete product'), 'error');
                        this.announceToScreenReader('Error deleting product: ' + (result.message || 'Unknown error'));
                    }
                } catch (error) {
                    console.error('Delete error:', error);
                    this.showToast('Error deleting product. Please try again.', 'error');
                    this.announceToScreenReader('Error deleting product. Please try again.');
                } finally {
                    this.closeDeleteModal();
                }
            }

            async toggleProductStatus(productId) {
                try {
                    const switchElement = document.querySelector(`[data-product-id="${productId}"] .status-checkbox`);
                    const originalState = switchElement ? switchElement.checked : false;
                    
                    this.announceToScreenReader('Updating product status, please wait');

                    const response = await fetch(`/admin/product/block/${productId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });

                    const data = await response.json();

                    if (data.success) {
                        this.showToast(data.message || 'Product status updated successfully!', 'success');
                        this.announceToScreenReader('Product status updated successfully');

                        if (switchElement) {
                            const switchContainer = switchElement.closest('.status-switch');
                            if (switchContainer) {
                                switchContainer.style.transform = 'scale(1.1)';
                                setTimeout(() => {
                                    switchContainer.style.transform = '';
                                }, 200);
                            }
                        }
                    } else {
                        this.showToast(data.message || 'Failed to update product status', 'error');
                        this.announceToScreenReader('Failed to update product status');

                        if (switchElement) {
                            switchElement.checked = originalState;
                        }
                    }
                } catch (error) {
                    console.error('Toggle status error:', error);
                    this.showToast('Error updating product status. Please try again.', 'error');
                    this.announceToScreenReader('Error updating product status');

                    const switchElement = document.querySelector(`[data-product-id="${productId}"] .status-checkbox`);
                    if (switchElement) {
                        switchElement.checked = !switchElement.checked;
                    }
                }
            }

            updateEmptyState() {
                const tbody = document.querySelector('.products-table tbody');
                if (tbody && tbody.children.length === 0) {
                    tbody.innerHTML = `
                        <tr role="row">
                            <td colspan="7" class="no-products" role="gridcell">
                                <div class="empty-state">
                                    <i class="fas fa-box-open" aria-hidden="true"></i>
                                    <p>No products found</p>
                                    <a href="/admin/product" class="btn btn-outline">
                                        <i class="fas fa-refresh" aria-hidden="true"></i>
                                        View All Products
                                    </a>
                                </div>
                            </td>
                        </tr>
                    `;
                }
            }

            showToast(message, type = 'success') {
                const toast = document.getElementById('toast');
                if (!toast) return;

                toast.classList.remove('success', 'error', 'warning', 'info');
                toast.classList.add(type);

                const messageElement = toast.querySelector('.toast-message');
                if (messageElement) {
                    messageElement.textContent = message;
                }

                toast.classList.add('show');
                toast.setAttribute('aria-hidden', 'false');
                
                this.announceToScreenReader(message);

                setTimeout(() => {
                    this.hideToast();
                }, 5000);
            }

            hideToast() {
                const toast = document.getElementById('toast');
                if (toast) {
                    toast.classList.remove('show');
                    toast.setAttribute('aria-hidden', 'true');
                    toast.style.transform = '';
                    toast.style.opacity = '';
                }
            }

            // Utility Methods
            debounce(func, wait) {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }

            throttle(func, limit) {
                let inThrottle;
                return function () {
                    const args = arguments;
                    const context = this;
                    if (!inThrottle) {
                        func.apply(context, args);
                        inThrottle = true;
                        setTimeout(() => (inThrottle = false), limit);
                    }
                };
            }
        }

        // Global functions for inline event handlers
        let adminDashboard;

        function editProduct(productId) {
            if (adminDashboard) {
                adminDashboard.editProduct(productId);
            }
        }

        function openDeleteModal(productId) {
            if (adminDashboard) {
                adminDashboard.openDeleteModal(productId);
            }
        }

        function closeDeleteModal() {
            if (adminDashboard) {
                adminDashboard.closeDeleteModal();
            }
        }

        function confirmDelete() {
            if (adminDashboard) {
                adminDashboard.confirmDelete();
            }
        }

        function toggleProductStatus(productId) {
            if (adminDashboard) {
                adminDashboard.toggleProductStatus(productId);
            }
        }

        function hideToast() {
            if (adminDashboard) {
                adminDashboard.hideToast();
            }
        }

        // Enhanced initialization
        document.addEventListener('DOMContentLoaded', () => {
            adminDashboard = new MobileOptimizedAdminDashboard();
            
            // Add CSS class for JavaScript enabled
            document.documentElement.classList.add('js-enabled');
            
            // Initialize viewport height fix
            adminDashboard.adjustViewportHeight();
        });

        // Handle page visibility changes
        document.addEventListener('visibilitychange', () => {
            if (document.hidden) {
                if (adminDashboard) {
                    adminDashboard.pauseAnimations();
                }
            } else {
                if (adminDashboard) {
                    adminDashboard.resumeAnimations();
                }
            }
        });

        // Service Worker registration for PWA capabilities
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/sw.js')
                    .then((registration) => {
                        console.log('SW registered: ', registration);
                    })
                    .catch((registrationError) => {
                        console.log('SW registration failed: ', registrationError);
                    });
            });
        }

        // Add screen reader only styles
        const srOnlyStyles = document.createElement('style');
        srOnlyStyles.textContent = `
            .sr-only {
                position: absolute !important;
                width: 1px !important;
                height: 1px !important;
                padding: 0 !important;
                margin: -1px !important;
                overflow: hidden !important;
                clip: rect(0, 0, 0, 0) !important;
                white-space: nowrap !important;
                border: 0 !important;
            }
            
            .animations-paused * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
            
            .js-enabled .no-js {
                display: none !important;
            }
        `;
        document.head.appendChild(srOnlyStyles);
    </script>
</body>
</html>
