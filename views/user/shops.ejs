<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chronox | Luxury Watches</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="/css/shops.css">
</head>

<body>
    <%-include("../partials/user/header") %>

        <section class="hero-banner">
            <div class="hero-content">
                <p class="hero-subtitle">Summer Collection 2025</p>
                <h1 class="hero-title">Timeless Elegance<br>For Every Wrist</h1>
                <p class="hero-description">Discover our exclusive collection of premium watches crafted with precision
                    and designed for those who appreciate the finer things in life.</p>
                <a href="#" class="hero-btn">EXPLORE COLLECTION</a>
            </div>
            <div class="hero-image">
                <img src="/images/banner/Precision-PN15-large.jpg" alt="Luxury Watch">
            </div>
            <div class="discount-badge">
                <span class="discount-text">UP TO</span>
                <span class="discount-value">50% OFF</span>
            </div>
        </section>

        <section class="product-section">
            <div class="product-container">
                <div class="filter-sidebar">
                    <h3 class="filter-title">Refine Selection</h3>

                    <!-- Unified Filter Form -->
                    <form id="shopFilterForm" method="GET" action="/shop">
                        <!-- Search box -->
                        <div class="search-container">
                            <input type="text" name="search" value="<%= query.search || '' %>"
                                placeholder="Search product..." id="searchInput">
                            <% if (query.search) { %>
                                <button type="button" id="clearSearch" class="clear-search-btn">
                                    <i class="fas fa-times"></i>
                                </button>
                            <% } else { %>
                                <button type="submit" class="search-btn">
                                    <i class="fas fa-search"></i>
                                </button>
                            <% } %>
                        </div>

                        <!-- Category Filter -->
                        <div class="filter-group">
                            <h4 class="filter-group-title">Category</h4>
                            <% categories.forEach((cat, index) => { %>
                                <div class="filter-option active">
                                    <input type="checkbox" id="cat_<%= index %>" name="categoryId" value="<%= cat._id %>"
                                        <%= categoryFilter.includes(cat._id.toString()) ? 'checked' : '' %>
                                        onchange="submitFilters()"
                                    >
                                    <label for="cat_<%= index %>">
                                        <%= cat.name %>
                                    </label>
                                </div>
                            <% }) %>
                        </div>

                        <!-- Sort Dropdown -->
                        <div class="sort-container">
                            <select name="sortBy" onchange="submitFilters()">
                                <option value="">Sort By</option>
                                <option value="price-asc" <%= query.sortBy === 'price-asc' ? 'selected' : '' %>>
                                    Price: Low to High
                                </option>
                                <option value="price-desc" <%= query.sortBy === 'price-desc' ? 'selected' : '' %>>
                                    Price: High to Low
                                </option>
                                <option value="name-asc" <%= query.sortBy === 'name-asc' ? 'selected' : '' %>>
                                    Name: A-Z
                                </option>
                                <option value="name-desc" <%= query.sortBy === 'name-desc' ? 'selected' : '' %>>
                                    Name: Z-A
                                </option>
                            </select>
                        </div>
                    </form>
                </div>

                <div class="product-grid">
                    <% products.forEach(product=> { %>
                        <div class="product-card">
                            <div class="product-image">
                                <% if (product.images && product.images.length> 0) { %>
                                    <img src="https://res.cloudinary.com/<%= cloudName %>/image/upload/<%= product.images[0].public_id %>"
                                        alt="<%= product.name %>">
                                    <% } else { %>
                                        <img src="/images/placeholder.jpg" alt="No image">
                                        <% } %>
                                            <div class="product-overlay">
                                                <a href="/productdetails/<%= product._id %>">
                                                    <button class="quick-view-btn">Quick View</button>
                                                </a>
                                            </div>
                            </div>
                            <div class="product-details">
                                <h3 class="product-name">
                                    <%= product.name %>
                                </h3>

                                <div class="product-price">
                                    <% if (product.variants && product.variants.length> 0 && product.variants[0]) { %>
                                        <span class="current-price">
                                            ₹<%= product.variants[0].salePrice || product.variants[0].regularPrice %>
                                        </span>
                                        <% if (product.variants[0].salePrice && product.variants[0].regularPrice) { %>
                                            <span class="old-price">
                                                ₹<%= product.variants[0].regularPrice %>
                                            </span>
                                            <% } %>
                                                <% } else { %>
                                                    <span class="current-price">Price not available</span>
                                                    <% } %>
                                </div>

                                <div class="product-rating">
                                    <% for (let i=0; i < Math.floor(product.rating || 0); i++) { %>
                                        <i class="fas fa-star"></i>
                                        <% } %>
                                            <% if ((product.rating || 0) % 1 !==0) { %>
                                                <i class="fas fa-star-half-alt"></i>
                                                <% } %>
                                                    <% for (let i=Math.ceil(product.rating || 0); i < 5; i++) { %>
                                                        <i class="far fa-star"></i>
                                                        <% } %>
                                                            <span class="rating-count">(<%= product.ratingCount || 4.5
                                                                    %>)</span>
                                </div>

                                <div class="product-card">
                                    <p>
                                        <%= product.name %>
                                    </p>
                                    <div class="add-to-cart">
                                        <button class="btn-add-cart" data-product-id="<%= product._id %>">Add to Cart</button>
                                       <button class="wishlist-btn" data-product-id="<%= product._id %>">
                                        <i class="<%= userWishlist.includes(product._id.toString()) ? 'fas' : 'far' %> fa-heart"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <% }) %>
                </div>
            </div>

            <div class="page-controls">
                <%
                // Helper function to build query string
                function buildQueryString(page) {
                    let params = [];
                    if (page) params.push(`page=${page}`);
                    if (query.search) params.push(`search=${encodeURIComponent(query.search)}`);
                    if (query.sortBy) params.push(`sortBy=${query.sortBy}`);
                    categoryFilter.forEach(catId => params.push(`categoryId=${catId}`));
                    return params.length > 0 ? '?' + params.join('&') : '';
                }
                %>

                <% if (currentPage > 1) { %>
                    <a href="/shop<%= buildQueryString(currentPage - 1) %>" class="page-btn">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                <% } %>

                <% for (let i = 1; i <= totalPage; i++) { %>
                    <a href="/shop<%= buildQueryString(i) %>"
                       class="page-btn <%= currentPage === i ? 'active' : '' %>">
                        <%= i %>
                    </a>
                <% } %>

                <% if (currentPage < totalPage) { %>
                    <a href="/shop<%= buildQueryString(currentPage + 1) %>" class="page-btn">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                <% } %>
            </div>
        </section>

        <!-- <script>

            document.addEventListener('DOMContentLoaded', function () {
                const sortSelect = document.querySelector('select[name="sortBy"]');
                if (sortSelect) {
                    sortSelect.addEventListener('change', () => {
                        sortSelect.form.submit();
                    });
                }

                const checkboxes = document.querySelectorAll('#filterForm input[type="checkbox"]');
                checkboxes.forEach(box => {
                    box.addEventListener('change', () => {
                        document.getElementById('filterForm').submit();
                    });
                });
            });
            function addToCart(productId, button) {
                const originalText = button.innerHTML;
                button.disabled = true;
                button.innerHTML = 'Adding...';

                fetch('/add-to-cart', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId })
                })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            // Success Toast
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'success',
                                title: 'Product added to cart',
                                showConfirmButton: false,
                                timer: 2000
                            });

                            button.innerHTML = '✓ Added';
                            button.style.backgroundColor = '#28a745';

                        } else {
                            // Error Toast
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'error',
                                title: data.message,
                                showConfirmButton: false,
                                timer: 3000
                            });

                            button.innerHTML = originalText;
                        }
                    })
                    .catch(() => {
                        // Error case JSON parse issue etc
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: 'Something went wrong',
                            showConfirmButton: false,
                            timer: 3000
                        });

                        button.innerHTML = originalText;
                    })
                    .finally(() => {
                        setTimeout(() => {
                            button.disabled = false;
                        }, 2000);
                    });
            

             const wishlistButtons = document.querySelectorAll(".wishlist-btn");

    wishlistButtons.forEach((btn) => {
      btn.addEventListener("click", async (e) => {
        const productId = btn.dataset.productId;

        try {
          const response = await fetch("/wishlist-add", {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({ productId })
          });

          const data = await response.json();

          if (response.ok) {
            // Optional: show toast, change icon, etc.
            showToast("Product added to wishlist");
            btn.querySelector("i").classList.remove("far");
            btn.querySelector("i").classList.add("fas"); // filled heart
          } else {
            showToast(data.message || "Something went wrong");
          }
        } catch (err) {
          console.error("Error adding to wishlist:", err);
        }
      });
    });
}

        </script> -->
        <script>
  // ===== Filter Management =====
  function submitFilters() {
    document.getElementById('shopFilterForm').submit();
  }

  document.addEventListener('DOMContentLoaded', function () {
    // Handle search form submission
    const searchInput = document.getElementById('searchInput');
    const shopFilterForm = document.getElementById('shopFilterForm');

    if (searchInput) {
      searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          e.preventDefault();
          submitFilters();
        }
      });
    }

    // Handle clear search button
    const clearSearchBtn = document.getElementById('clearSearch');
    if (clearSearchBtn) {
      clearSearchBtn.addEventListener('click', function() {
        searchInput.value = '';
        submitFilters();
      });
    }

    // ===== Wishlist Button Toggle =====
    const wishlistButtons = document.querySelectorAll(".wishlist-btn");
    wishlistButtons.forEach((btn) => {
      btn.addEventListener("click", async (e) => {
        const productId = btn.dataset.productId;
        const icon = btn.querySelector("i");
        const isInWishlist = icon.classList.contains("fas");

        try {
          const response = await fetch(isInWishlist ? "/wishlist-remove" : "/wishlist-add", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ productId })
          });

          const data = await response.json();

          if (response.ok) {
            showToast(isInWishlist ? "Removed from wishlist" : "Added to wishlist");

            // Toggle icon style
            icon.classList.toggle("far");
            icon.classList.toggle("fas");
          } else {
            showToast(data.message || "Something went wrong");
          }
        } catch (err) {
          console.error("Wishlist error:", err);
        }
      });
    });

    // ===== Cart Buttons (require addToCart() to be called via HTML onclick or listener) =====
    const cartButtons = document.querySelectorAll(".btn-add-cart");
    cartButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const productId = button.dataset.productId;
        addToCart(productId, button);
      });
    });
  });

  // ✅ Add to Cart function (reusable)
  function addToCart(productId, button) {
    const originalText = button.innerHTML;
    button.disabled = true;
    button.innerHTML = 'Adding...';

    fetch('/add-to-cart', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ productId })
    })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'success',
            title: 'Product added to cart',
            showConfirmButton: false,
            timer: 2000
          });

          button.innerHTML = '✓ Added';
          button.style.backgroundColor = '#28a745';

          // Remove from wishlist UI if it was in wishlist
          const wishlistBtn = document.querySelector(`[data-product-id="${productId}"].wishlist-btn`);
          if (wishlistBtn) {
            const icon = wishlistBtn.querySelector('i');
            if (icon && icon.classList.contains('fas')) {
              icon.classList.remove('fas');
              icon.classList.add('far');
            }
          }
        } else {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: data.message,
            showConfirmButton: false,
            timer: 3000
          });

          button.innerHTML = originalText;
        }
      })
      .catch(() => {
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'error',
          title: 'Something went wrong',
          showConfirmButton: false,
          timer: 3000
        });

        button.innerHTML = originalText;
      })
      .finally(() => {
        setTimeout(() => {
          button.disabled = false;
        }, 2000);
      });
  }

  // ✅ Toast helper
  function showToast(message) {
    Swal.fire({
      toast: true,
      position: 'top-end',
      icon: 'info',
      title: message,
      showConfirmButton: false,
      timer: 2000
    });
  }
</script>


        <%- include("../../views/partials/user/footer") %>
</body>

</html>